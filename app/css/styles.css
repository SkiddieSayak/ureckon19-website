/*! normalize.css v3.0.2 | MIT License | git.io/normalize * */
@import url("https://fonts.googleapis.com/css?family=Assistant:300,400,700|Open+Sans:300,400,700|Roboto:300,400,500");
@import url("https://fonts.googleapis.com/css?family=Raleway:300,400,500,700");
@import url("https://fonts.googleapis.com/css?family=Staatliches");
@import url("https://fonts.googleapis.com/css?family=Overpass+Mono");
@import url("https://fonts.googleapis.com/css?family=Major+Mono+Display");
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0;
  padding: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.margin__first {
  margin-top: 8rem; }

/* Primary colours RGB */
/* Secondary colours RGB */
/* Lighter colours Rgb*/
* {
  font-family: 'Assistant', sans-serif; }

input {
  outline: none;
  border: none; }

textarea {
  outline: none;
  border: none; }

textarea:focus, input:focus {
  border-color: transparent !important; }

input:focus::-webkit-input-placeholder {
  color: transparent; }

input:focus:-moz-placeholder {
  color: transparent; }

input:focus::-moz-placeholder {
  color: transparent; }

input:focus:-ms-input-placeholder {
  color: transparent; }

textarea:focus::-webkit-input-placeholder {
  color: transparent; }

textarea:focus:-moz-placeholder {
  color: transparent; }

textarea:focus::-moz-placeholder {
  color: transparent; }

textarea:focus:-ms-input-placeholder {
  color: transparent; }

input::-webkit-input-placeholder {
  color: #adadad; }

input:-moz-placeholder {
  color: #adadad; }

input::-moz-placeholder {
  color: #adadad; }

input:-ms-input-placeholder {
  color: #adadad; }

textarea::-webkit-input-placeholder {
  color: #adadad; }

textarea:-moz-placeholder {
  color: #adadad; }

textarea::-moz-placeholder {
  color: #adadad; }

textarea:-ms-input-placeholder {
  color: #adadad; }

/*==================================================================
[ Background ]*/
.bg-container-contact100 {
  width: 100%;
  height: 100%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  /* position: fixed; */
  z-index: 1;
  top: 0;
  left: 0; }

.bg-container-contact100::before {
  content: "";
  display: block;
  position: absolute;
  z-index: -11;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(41, 44, 51, 0.6);
  pointer-events: none; }

/*---------------------------------------------*/
.contact100-header {
  width: 100%;
  height: 80px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  padding: 10px 35px; }

.contact100-header-logo img {
  max-height: 23px; }

/*==================================================================
[ Content container ]*/
.container-contact100 {
  width: 100%;
  min-height: 100vh;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 15px;
  /* background: rgba(132,106,221,0.8); */
  /* background: #adadad; */
  background: rgba(107, 121, 241, 0.8);
  position: fixed;
  visibility: hidden;
  /* position: sticky; */
  /* position: fixed; */
  /* position: inherit; */
  /* top: ; */
  /* top: 0.1%; */
  z-index: 10; }

.wrap-contact100 {
  width: 560px;
  background: #fff;
  border-radius: 3px;
  position: relative;
  margin-top: 40px; }

/*==================================================================
[ Title form ]*/
.contact100-form-title {
  /* font-family: Montserrat-Bold; */
  font-size: 30px;
  color: #fff;
  line-height: 1.2;
  text-transform: uppercase;
  width: 100%;
  min-height: 128px;
  position: relative;
  z-index: 1;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  overflow: hidden;
  padding: 30px 15px 30px 15px; }

.contact100-form-title::before {
  content: "";
  display: block;
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(67, 67, 67, 0.6); }

.contact100-form-title span {
  text-align: center; }

/*==================================================================
[ Form ]*/
.contact100-form {
  width: 100%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 40px 55px 48px 55px; }

.zmdi-close:hover {
  color: #ff0000; }

/*------------------------------------------------------------------
[ Input ]*/
.wrap-contact100 {
  top: 200px; }

.wrap-input100, #the-basics {
  width: 100%;
  position: relative;
  border: 1px solid #e6e6e6;
  border-radius: 2px;
  margin-bottom: 15px; }

.label-input100 {
  font-size: 18px;
  color: #999999;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  width: 60px;
  height: 100%;
  top: 0;
  left: 2px; }

.label-input100.rs1 {
  height: 60px; }

.input100 {
  display: block;
  width: 100%;
  background: transparent;
  /* font-family: Montserrat-Regular; */
  font-size: 15px;
  color: #333333;
  line-height: 1.2;
  padding: 0 25px 0 60px; }

input.input100 {
  height: 55px; }

textarea.input100 {
  min-height: 162px;
  padding-top: 22px;
  padding-bottom: 15px; }

/*---------------------------------------------*/
.focus-input100 {
  position: absolute;
  display: block;
  width: calc(100% + 2px);
  height: calc(100% + 2px);
  top: -1px;
  left: -1px;
  pointer-events: none;
  border: 1px solid;
  border-radius: 2px;
  border-color: #846add;
  visibility: hidden;
  opacity: 0;
  transition: all 0.4s;
  transform: scaleX(1.1) scaleY(1.3); }

.input100:focus + .focus-input100 {
  visibility: visible;
  opacity: 1;
  transform: scale(1); }

.input100:focus + .focus-input100 + .label-input100 {
  color: #846add; }

#addmember, #delmember {
  border-radius: 50%;
  height: 3rem;
  width: 3rem;
  font-size: 1.5rem;
  font-weight: bold;
  /* justify-content: center; */ }

/*------------------------------------------------------------------
[ Button ]*/
.container-contact100-form-btn {
  width: 100%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: center;
  justify-content: center;
  padding-top: 17px; }

.contact100-form-btn {
  /* font-family: Montserrat-Bold; */
  font-size: 12px;
  color: #fff;
  line-height: 1.2;
  text-transform: uppercase;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 20px;
  min-width: 160px;
  height: 42px;
  border-radius: 21px;
  background: #846add;
  box-shadow: 0 10px 30px 0px rgba(132, 106, 221, 0.5);
  -moz-box-shadow: 0 10px 30px 0px rgba(132, 106, 221, 0.5);
  -webkit-box-shadow: 0 10px 30px 0px rgba(132, 106, 221, 0.5);
  -o-box-shadow: 0 10px 30px 0px rgba(132, 106, 221, 0.5);
  -ms-box-shadow: 0 10px 30px 0px rgba(132, 106, 221, 0.5);
  transition: all 0.4s; }

.contact100-form-btn:hover {
  background: #333333;
  box-shadow: 0 10px 30px 0px rgba(51, 51, 51, 0.5);
  -moz-box-shadow: 0 10px 30px 0px rgba(51, 51, 51, 0.5);
  -webkit-box-shadow: 0 10px 30px 0px rgba(51, 51, 51, 0.5);
  -o-box-shadow: 0 10px 30px 0px rgba(51, 51, 51, 0.5);
  -ms-box-shadow: 0 10px 30px 0px rgba(51, 51, 51, 0.5); }

/*------------------------------------------------------------------
[ Responsive ]*/
@media (max-width: 576px) {
  .contact100-form {
    padding: 40px 15px 48px 15px; }
  .input100 {
    padding: 0 25px 0 40px; }
  .label-input100 {
    width: 40px; } }

/*------------------------------------------------------------------
[ Alert validate ]*/
.validate-input, #the-basics {
  position: relative; }

.alert-validate .focus-input100 {
  box-shadow: 0 5px 20px 0px rgba(250, 66, 81, 0.1);
  -moz-box-shadow: 0 5px 20px 0px rgba(250, 66, 81, 0.1);
  -webkit-box-shadow: 0 5px 20px 0px rgba(250, 66, 81, 0.1);
  -o-box-shadow: 0 5px 20px 0px rgba(250, 66, 81, 0.1);
  -ms-box-shadow: 0 5px 20px 0px rgba(250, 66, 81, 0.1); }

.alert-validate::before {
  content: "";
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  width: calc(100% + 2px);
  height: calc(100% + 2px);
  background-color: transparent;
  border: 1px solid #fa4251;
  border-radius: 2px;
  top: -1px;
  left: -1px;
  pointer-events: none; }

.btn-hide-validate {
  font-family: "Font Awesome 5 Free";
  font-size: 18px;
  color: #fa4251;
  cursor: pointer;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  height: 100%;
  top: 0px;
  right: -25px; }

.rs1-alert-validate.alert-validate::before {
  background-color: #fff; }

.true-validate::after {
  content: "\f00c";
  font-family: "Font Awesome 5 Free";
  font-size: 18px;
  color: #00ad5f;
  font-weight: 900;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  height: 100%;
  top: 0px;
  right: -25px; }

.members {
  width: 100%; }

.twitter-typeahead {
  width: 100%; }

.tt-menu {
  margin-left: 5px;
  font-size: 1.2rem;
  /* font-family: Montserrat-Regular, sans-serif; */
  border: 3px solid #000;
  border-radius: 5px;
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
  width: 100%;
  display: block;
  background: #fff; }

.tt-suggestion {
  padding: 5px; }

.tt-suggestion:hover {
  cursor: pointer;
  background-color: #00ad5f;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  color: #fff; }

/*---------------------------------------------*/
@media (max-width: 576px) {
  .btn-hide-validate {
    right: 10px; }
  .true-validate::after {
    right: 10px; } }

#notSigned {
  height: 220px;
  display: none; }

/*//////////////////////////////////////////////////////////////////
[ Button show / hide ]*/
.btn-hide-contact100 {
  font-size: 30px;
  color: #fff;
  opacity: 0.6;
  position: absolute;
  right: 0;
  top: -44px;
  transition: all 0.4s; }

.btn-hide-contact100:hover {
  opacity: 1; }

@media screen and (max-width: 410px) {
  #notSigned {
    height: 250px; } }

@media screen and (max-width: 1360px) {
  .background__image {
    height: 100% !important; } }

.contact100-form {
  height: 400px;
  overflow: auto; }

.footer__aboutus {
  background: linear-gradient(to right, #24243e, #302b63, #0f0c29);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: white; }
  .footer__aboutus-links {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[5];
    grid-template-columns: repeat(5, 1fr);
    padding: 2rem 0 1.5rem 0;
    text-align: center;
    text-transform: uppercase; }
  .footer__aboutus-text {
    text-align: center;
    padding: 3rem; }
  .footer__aboutus-socials {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[6];
    grid-template-columns: repeat(6, 1fr);
    text-align: center;
    width: 30%;
    padding: 0 3rem 3rem 3rem;
    margin: auto; }
    @media (max-width: 530px) {
      .footer__aboutus-socials {
        width: 100%;
        padding: none; } }
  .footer__aboutus-copyright {
    text-align: center;
    background-color: #24243e;
    padding: 2rem; }
  .footer__aboutus-line {
    color: white; }
  .footer__aboutus a {
    color: white;
    text-decoration: none; }
  .footer__aboutus a:hover {
    color: grey;
    text-decoration: none; }

.footer__events {
  background: linear-gradient(to right, #ff6a00, #ee0979);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: white; }
  .footer__events-links {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[5];
    grid-template-columns: repeat(5, 1fr);
    padding: 2rem 0 1.5rem 0;
    text-align: center;
    text-transform: uppercase; }
  .footer__events-text {
    text-align: center;
    padding: 3rem; }
  .footer__events-socials {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[6];
    grid-template-columns: repeat(6, 1fr);
    text-align: center;
    width: 30%;
    padding: 0 3rem 3rem 3rem;
    margin: auto; }
    @media (max-width: 530px) {
      .footer__events-socials {
        width: 100%; } }
  .footer__events-copyright {
    text-align: center;
    background: linear-gradient(to right, #dd5c00, #c90865);
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    padding: 2rem; }
  .footer__events-line {
    color: white; }
  .footer__events a {
    color: white;
    text-decoration: none; }
  .footer__events a:hover {
    color: grey;
    text-decoration: none; }

.footer__talks {
  background: linear-gradient(to right, #DD2476, #FF512F);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: white; }
  .footer__talks-links {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[5];
    grid-template-columns: repeat(5, 1fr);
    padding: 2rem 0 1.5rem 0;
    text-align: center;
    text-transform: uppercase; }
  .footer__talks-text {
    text-align: center;
    padding: 3rem; }
  .footer__talks-socials {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[6];
    grid-template-columns: repeat(6, 1fr);
    text-align: center;
    width: 30%;
    padding: 0 3rem 3rem 3rem;
    margin: auto; }
    @media (max-width: 530px) {
      .footer__talks-socials {
        width: 100%; } }
  .footer__talks-copyright {
    text-align: center;
    background: linear-gradient(to right, #dd2486, #ff5140);
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    padding: 2rem; }
  .footer__talks-line {
    color: white; }
  .footer__talks a {
    color: white;
    text-decoration: none; }
  .footer__talks a:hover {
    color: grey;
    text-decoration: none; }

.footer__teams {
  background: linear-gradient(to right, #00CDAC, #02AAB0);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: white; }
  .footer__teams-links {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[5];
    grid-template-columns: repeat(5, 1fr);
    padding: 2rem 0 1.5rem 0;
    text-align: center;
    text-transform: uppercase; }
  .footer__teams-text {
    text-align: center;
    padding: 3rem; }
  .footer__teams-socials {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[6];
    grid-template-columns: repeat(6, 1fr);
    text-align: center;
    width: 30%;
    padding: 0 3rem 3rem 3rem;
    margin: auto; }
    @media (max-width: 530px) {
      .footer__teams-socials {
        width: 100%; } }
  .footer__teams-copyright {
    text-align: center;
    background: linear-gradient(to right, #00cdbd, #02aac1);
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    padding: 2rem; }
  .footer__teams-line {
    color: white; }
  .footer__teams a {
    color: white;
    text-decoration: none; }
  .footer__teams a:hover {
    color: grey;
    text-decoration: none; }

.footer__workshop {
  background: linear-gradient(to right, #F45C43, #EB3349);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: white; }
  .footer__workshop-links {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[5];
    grid-template-columns: repeat(5, 1fr);
    padding: 2rem 0 1.5rem 0;
    text-align: center;
    text-transform: uppercase; }
  .footer__workshop-text {
    text-align: center;
    padding: 3rem; }
  .footer__workshop-socials {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[6];
    grid-template-columns: repeat(6, 1fr);
    text-align: center;
    width: 30%;
    padding: 0 3rem 3rem 3rem;
    margin: auto; }
    @media (max-width: 530px) {
      .footer__workshop-socials {
        width: 100%; } }
  .footer__workshop-copyright {
    text-align: center;
    background: linear-gradient(to right, #F45C54, #EB3360);
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    padding: 2rem; }
  .footer__workshop-line {
    color: white; }
  .footer__workshop a {
    color: white;
    text-decoration: none; }
  .footer__workshop a:hover {
    color: grey;
    text-decoration: none; }

.footer__web {
  background: linear-gradient(to right, #414345, #232526);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: white; }
  .footer__web-links {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[5];
    grid-template-columns: repeat(5, 1fr);
    padding: 2rem 0 1.5rem 0;
    text-align: center;
    text-transform: uppercase; }
  .footer__web-text {
    text-align: center;
    padding: 3rem; }
  .footer__web-socials {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[6];
    grid-template-columns: repeat(6, 1fr);
    text-align: center;
    width: 30%;
    padding: 0 3rem 3rem 3rem;
    margin: auto; }
    @media (max-width: 530px) {
      .footer__web-socials {
        width: 100%; } }
  .footer__web-copyright {
    text-align: center;
    background: linear-gradient(to right, #414356, #232537);
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    padding: 2rem; }
  .footer__web-line {
    color: white; }
  .footer__web a {
    color: white;
    text-decoration: none; }
  .footer__web a:hover {
    color: grey;
    text-decoration: none; }

.footer__partners {
  background: linear-gradient(to right, #F9D423, #e65c00);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: white; }
  .footer__partners-links {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[5];
    grid-template-columns: repeat(5, 1fr);
    padding: 2rem 0 1.5rem 0;
    text-align: center;
    text-transform: uppercase; }
  .footer__partners-text {
    text-align: center;
    padding: 3rem; }
  .footer__partners-socials {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[6];
    grid-template-columns: repeat(6, 1fr);
    text-align: center;
    width: 30%;
    padding: 0 3rem 3rem 3rem;
    margin: auto; }
    @media (max-width: 530px) {
      .footer__partners-socials {
        width: 100%; } }
  .footer__partners-copyright {
    text-align: center;
    background: linear-gradient(to right, #F9D434, #e65c26);
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    padding: 2rem; }
  .footer__partners-line {
    color: white; }
  .footer__partners a {
    color: white;
    text-decoration: none; }
  .footer__partners a:hover {
    color: grey;
    text-decoration: none; }

.footer__home {
  font-size: 1rem;
  z-index: 10;
  padding-top: 4rem;
  padding-bottom: 1rem;
  padding-left: 3rem;
  padding-right: 3rem;
  font-weight: 600;
  text-align: center;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 1fr 1fr 5fr 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr 5fr 1fr 1fr 1fr;
  grid-template-areas: "one two three . four five six"; }
  .footer__home a {
    color: #181717 !important; }
    .footer__home a:hover {
      text-decoration: none !important;
      color: gray !important; }
  .footer__home-aboutus {
    grid-area: one; }
  .footer__home-partners {
    grid-area: two; }
  .footer__home-team {
    grid-area: three; }
  .footer__home-dev {
    grid-area: four; }
  .footer__home-UOSC {
    grid-area: five; }
  .footer__home-others {
    grid-area: six; }
  @media (max-width: 530px) {
    .footer__home {
      width: 100%;
      -ms-grid-columns: (1fr)[6];
      grid-template-columns: repeat(6, 1fr);
      grid-template-areas: "one two three four five six";
      font-size: 0.6rem;
      text-align: none;
      padding-left: 1rem;
      padding-right: 1rem; } }

.navbar__links a:hover {
  color: #bbb9b9 !important;
  text-decoration: none !important; }

.navbar__links a {
  color: white !important; }

.fas {
  color: white !important; }

nav {
  display: block;
  position: fixed;
  width: 500px;
  height: 500px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  transform: translate3d(25px, -25px, 0);
  transition: transform 0.5s cubic-bezier(0.3, 1.4, 0.5, 0.9); }
  @media (max-width: 530px) {
    nav {
      width: 250px;
      height: 250px;
      transform: translate3d(12.5px, -12.5px, 0); } }
  nav.open {
    transform: translate3d(0, 0, 0); }
  nav.top-right {
    top: -140px;
    right: -140px;
    z-index: 5; }
    @media (max-width: 530px) {
      nav.top-right {
        top: -70px;
        right: -70px; } }

.disc {
  position: absolute;
  display: inline-block;
  text-align: center;
  cursor: pointer;
  font: 25px Alegreya Sans, sans-serif;
  line-height: 40px;
  padding-top: 10px;
  border-radius: 250px;
  transform: scale3d(0.5, 0.5, 0.5) rotate3d(0, 0, 1, 190deg);
  pointer-events: none;
  opacity: 0;
  cursor: pointer;
  transition: transform 0.5s cubic-bezier(0.3, 1.4, 0.5, 0.9), opacity 0.5s; }
  @media (max-width: 530px) {
    .disc {
      font: 12.5px Alegreya Sans, sans-serif;
      line-height: 20px;
      padding-top: 5px;
      border-radius: 125px; } }
  .disc div {
    transform: rotate(180deg); }
  .open .disc {
    pointer-events: auto;
    opacity: 1; }

.l1 {
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  background: #0f0c29;
  transition-delay: 0s; }
  @media (max-width: 530px) {
    .l1 {
      top: 0px;
      left: 0px;
      right: 0px;
      bottom: 0px; } }
  .open .l1 {
    transition-delay: 0s;
    transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
    opacity: 1; }
    .open .l1:hover {
      background: shade(#0f0c29, 90%) !important;
      color: #0f0c29;
      transition-delay: 0s;
      background-color: rgba(0, 0, 0, 0.719);
      color: white !important; }
    .open .l1:active {
      background: shade(#0f0c29, 50%);
      color: #0f0c29; }
    .open .l1.toggle {
      transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg); }

.l2 {
  top: 50px;
  left: 50px;
  right: 50px;
  bottom: 50px;
  background: #13112d;
  transition-delay: 0.1s; }
  @media (max-width: 530px) {
    .l2 {
      top: 25px;
      left: 25px;
      right: 25px;
      bottom: 25px; } }
  .open .l2 {
    transition-delay: 0.1s;
    transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
    opacity: 1; }
    .open .l2:hover {
      background: shade(#13112d, 90%) !important;
      color: #13112d;
      transition-delay: 0s;
      background-color: rgba(0, 0, 0, 0.719);
      color: white !important; }
    .open .l2:active {
      background: shade(#13112d, 50%);
      color: #13112d; }
    .open .l2.toggle {
      transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg); }

.l3 {
  top: 100px;
  left: 100px;
  right: 100px;
  bottom: 100px;
  background: #171631;
  transition-delay: 0.2s; }
  @media (max-width: 530px) {
    .l3 {
      top: 50px;
      left: 50px;
      right: 50px;
      bottom: 50px; } }
  .open .l3 {
    transition-delay: 0.2s;
    transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
    opacity: 1; }
    .open .l3:hover {
      background: shade(#171631, 90%) !important;
      color: #171631;
      transition-delay: 0s;
      background-color: rgba(0, 0, 0, 0.719);
      color: white !important; }
    .open .l3:active {
      background: shade(#171631, 50%);
      color: #171631; }
    .open .l3.toggle {
      transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg); }

.l4 {
  top: 150px;
  left: 150px;
  right: 150px;
  bottom: 150px;
  background: #1c1a36;
  transition-delay: 0.3s; }
  @media (max-width: 530px) {
    .l4 {
      top: 75px;
      left: 75px;
      right: 75px;
      bottom: 75px; } }
  .open .l4 {
    transition-delay: 0.3s;
    transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
    opacity: 1; }
    .open .l4:hover {
      background: shade(#1c1a36, 90%) !important;
      color: #1c1a36;
      transition-delay: 0s;
      background-color: rgba(0, 0, 0, 0.719);
      color: white !important; }
    .open .l4:active {
      background: shade(#1c1a36, 50%);
      color: #1c1a36; }
    .open .l4.toggle {
      transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg); }

.l5 {
  top: 200px;
  left: 200px;
  right: 200px;
  bottom: 200px;
  background: #201f3a;
  transition-delay: 0.4s; }
  @media (max-width: 530px) {
    .l5 {
      top: 100px;
      left: 100px;
      right: 100px;
      bottom: 100px; } }
  .open .l5 {
    transition-delay: 0.4s;
    transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
    opacity: 1; }
    .open .l5:hover {
      background: shade(#201f3a, 90%) !important;
      color: #201f3a;
      transition-delay: 0s;
      background-color: rgba(0, 0, 0, 0.719);
      color: white !important; }
    .open .l5:active {
      background: shade(#201f3a, 50%);
      color: #201f3a; }
    .open .l5.toggle {
      transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg); }

.toggle {
  line-height: 100px;
  padding: 0;
  width: 100px;
  background: #24243e;
  opacity: 1;
  transform: none;
  pointer-events: auto;
  transition-delay: 0s; }
  @media (max-width: 530px) {
    .toggle {
      line-height: 50px;
      width: 50px; } }
  .open .toggle {
    transform: rotate3d(0, 0, 1, 0deg); }
  .toggle:hover {
    background: shade(#24243e, 90%);
    color: #24243e; }
  .toggle:active {
    background: shade(#24243e, 50%);
    color: rgba(36, 36, 62, 0.5);
    transform: scale(0.9);
    transition-duration: 0s; }

:root {
  --Hsl: 140;
  --hsL: 40; }

.body {
  position: relative;
  margin: auto;
  padding: 0px 0 30px 0;
  min-height: calc(100vh - 120px); }
  .body:after, .body:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100%;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    transition: all 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955);
    z-index: -6; }
  .body:after {
    background: radial-gradient(circle, hsl(var(--Hsl), 89%, 86%) 0%, #fafafa 100%);
    opacity: 1;
    z-index: -1; }
  .body:before {
    background: radial-gradient(circle, hsl(var(--Hsl), 29%, 6%) 0%, #2e2e2e 100%);
    opacity: 0; }

.tesseract {
  width: 60vw;
  padding-top: 3rem;
  max-height: calc(100vh - 120px);
  filter: drop-shadow(3px 3px 4px rgba(0, 0, 0, 0.4));
  stroke: #2D4671;
  transition: stroke 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  margin: auto; }
  .tesseract .up {
    fill: hsl(var(--Hsl), 72%, 78%); }
  .tesseract .left {
    fill: hsl(var(--Hsl), 39%, 34%); }
  .tesseract .right {
    fill: hsl(var(--Hsl), 39%, 54%); }
  .tesseract polygon {
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-miterlimit: 10; }
  .tesseract .cube,
  .tesseract polygon[class*="cube"] {
    animation: pulse 3.6s cubic-bezier(0.455, 0.03, 0.515, 0.955) infinite;
    animation-play-state: running; }
  .tesseract .cube-1 {
    animation-delay: 0.225s !important; }
  .tesseract .cube-2 {
    animation-delay: 0.45s !important; }
  .tesseract .cube-3 {
    animation-delay: 0.675s !important; }
  .tesseract .cube-4 {
    animation-delay: 0.9s !important; }
  .tesseract .cube-5 {
    animation-delay: 1.125s !important; }
  .tesseract .cube-6 {
    animation-delay: 1.35s !important; }
  .tesseract .cube-7 {
    animation-delay: 1.575s !important; }
  .tesseract .cube-8 {
    animation-delay: 1.8s !important; }

@keyframes pulse {
  0%, 40% {
    transform: scale(1);
    opacity: 1; }
  20% {
    transform: scale(0);
    opacity: 0; } }

.controls {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between; }
  .controls h5 {
    font-family: 'Major Mono Display', monospace;
    font-size: 10px;
    color: hsl(var(--Hsl), 72%, 20%);
    margin: 0;
    margin-top: 6px;
    transition: color 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955); }
  .controls > div {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
    justify-content: center;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 33%;
    padding-top: 5px;
    text-align: center; }
    .controls > div:first-of-type h5 span:first-of-type {
      display: inline-block; }
    .controls > div:first-of-type h5 span:last-of-type {
      display: none; }
  .controls .svg-wrap {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: end;
    align-items: flex-end;
    height: 36px; }
  .controls .dragIndicator {
    width: 60px;
    stroke: hsl(var(--Hsl), 72%, 20%);
    opacity: 0.9;
    transition: all 0.4s cubic-bezier(0.455, 0.03, 0.515, 0.955); }
    .controls .dragIndicator #arrows {
      opacity: 0.6; }
    .controls .dragIndicator .mouse {
      animation: BandF 2s cubic-bezier(0.455, 0.03, 0.515, 0.955) infinite; }

@keyframes BandF {
  0%, 100% {
    transform: translateX(-3px); }
  50% {
    transform: translateX(3px); } }
  .controls .toggle-lightMode svg {
    width: 36px;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    -webkit-tap-highlight-color: transparent; }
    .controls .toggle-lightMode svg:hover {
      cursor: pointer; }
  .controls .toggle-lightMode h5 span:first-of-type {
    display: inline-block; }
  .controls .toggle-lightMode h5 span:last-of-type {
    display: none; }
  .controls .toggle-lightMode #toggle-mode {
    filter: drop-shadow(0px 0px 5px hsl(var(--Hsl), 72%, 100%)); }
  .controls .toggle-lightMode .day {
    fill: hsl(var(--Hsl), 100%, 80%);
    opacity: 1; }
  .controls .toggle-lightMode .night {
    transform: translateY(-100%);
    fill: #2e3e46;
    opacity: 0;
    transition: all 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955); }
  .controls .play-pause {
    width: 30px;
    height: 30px;
    opacity: 0.6;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    -webkit-tap-highlight-color: transparent; }
    .controls .play-pause path {
      fill: hsl(var(--Hsl), 72%, 40%); }
    .controls .play-pause #play,
    .controls .play-pause #pause {
      transition: 0.3s cubic-bezier(0.455, 0.03, 0.515, 0.955);
      transition-property: transform, opacity;
      transform-origin: 15px 15px; }
    .controls .play-pause #play {
      transform: scale(0);
      opacity: 0; }
    .controls .play-pause #pause {
      transform: scale(1);
      opacity: 1; }
    .controls .play-pause:hover {
      cursor: pointer; }
  @media (max-width: 400px) {
    .controls h5 {
      font-size: 8px; } }

body.darkMode:after {
  opacity: 0; }

body.darkMode:before {
  opacity: 1; }

body.darkMode .toggle-lightMode .night {
  transform: translateY(0%);
  opacity: 1; }

body.darkMode .toggle-lightMode h5 span:first-of-type {
  display: none; }

body.darkMode .toggle-lightMode h5 span:last-of-type {
  display: inline-block; }

body.darkMode .tesseract {
  filter: drop-shadow(2px 2px 2px rgba(255, 255, 255, 0.4));
  stroke: #c5c5c5; }
  body.darkMode .tesseract .up {
    fill: hsl(var(--Hsl), 62%, 90%); }
  body.darkMode .tesseract .left {
    fill: hsl(var(--Hsl), 29%, 46%); }
  body.darkMode .tesseract .right {
    fill: hsl(var(--Hsl), 29%, 66%); }

body.darkMode .dragIndicator {
  stroke: hsl(var(--Hsl), 72%, 96%); }

body.darkMode .play-pause {
  filter: drop-shadow(2px 2px 2px rgba(255, 255, 255, 0.3)); }
  body.darkMode .play-pause path {
    fill: hsl(var(--Hsl), 72%, 90%); }

body.darkMode h5 {
  color: hsl(var(--Hsl), 72%, 96%); }

body.togglePaused .tesseract .cube,
body.togglePaused .tesseract polygon[class*="cube"] {
  animation-play-state: paused; }

body.togglePaused .controls > div:first-of-type h5 span:first-of-type {
  display: none; }

body.togglePaused .controls > div:first-of-type h5 span:last-of-type {
  display: inline-block; }

body.togglePaused .play-pause #play {
  transform: scale(1);
  opacity: 1; }

body.togglePaused .play-pause #pause {
  transform: scale(0);
  opacity: 0; }

.logo {
  width: 80%;
  margin: auto;
  padding-top: 1rem;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr; }
  @media (max-width: 530px) {
    .logo {
      display: -ms-grid;
      display: grid;
      -ms-grid-columns: (1fr)[3];
      grid-template-columns: repeat(3, 1fr); }
      .logo__UEM {
        width: 100%;
        height: auto; }
      .logo__ureckon {
        width: 100%;
        height: auto; }
      .logo__IEM {
        width: 100%;
        height: auto; } }
  .logo__UEM {
    text-align: center; }
  .logo__ureckon {
    text-align: center; }
  .logo__IEM {
    text-align: center; }

/* Content */
.content {
  font-family: 'Overpass Mono', monospace;
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 0 1em; }

.content:not(:first-child) {
  padding: 4em 0; }

.content.content--padded {
  padding: 4em 0 8em; }

.content__title {
  font-size: 0.85em;
  position: absolute;
  top: 18%;
  left: 2em;
  width: 5em;
  margin: 0.75em 0;
  color: #b0adad; }

/* Grid */
.grid {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  padding: 0 7em;
  perspective: 800px;
  perspective-origin: 50% 100%; }

.grid__item {
  position: relative;
  display: block;
  -ms-flex: none;
  flex: none;
  width: 250px;
  margin: 1.5em 2vw;
  cursor: default;
  transform-style: preserve-3d; }

.grid__item:hover,
.grid__item:focus {
  outline: none; }

.grid__item--c1,
.grid__item--c1:hover,
.grid__item--c1:focus {
  color: #52649e; }

.grid__item--c2,
.grid__item--c2:hover,
.grid__item--c2:focus {
  color: #ee7074; }

.grid__item--c3,
.grid__item--c3:hover,
.grid__item--c3:focus {
  color: #f7f295; }

.stack {
  position: relative;
  width: 100%;
  height: 200px;
  transform-style: preserve-3d; }

.stack__deco {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: currentColor;
  transform-origin: 50% 100%; }

.stack__deco:first-child {
  opacity: 0.2; }

.stack__deco:nth-child(2) {
  opacity: 0.4; }

.stack__deco:nth-child(3) {
  opacity: 0.6; }

.stack__deco:nth-child(4) {
  opacity: 0.8; }

.stack__figure {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
  width: 100%;
  height: 100%;
  cursor: pointer;
  transform-origin: 50% 100%; }

.stack__img {
  position: relative;
  display: block;
  -ms-flex: none;
  flex: none; }

.grid__item-caption {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  width: 100%;
  transform-style: preserve-3d; }

.grid__item-title {
  font-size: 1.15em;
  width: 100%;
  margin: 1em 0;
  text-align: left;
  color: #181717; }

.column {
  width: 50%;
  padding: 0 0.5em;
  opacity: 0; }

.column--left {
  text-align: right; }

.column--right {
  text-align: left; }

.column__text {
  font-size: 0.85em;
  display: block;
  color: #fff; }

.column--left .column__text {
  font-weight: bold; }

.column--right .column__text {
  color: #b0adad; }

/* pollux */
.grid--effect-pollux {
  perspective: 1000px;
  perspective-origin: 50% -70%; }

.grid--effect-pollux .column {
  opacity: 1; }

.grid--effect-pollux .stack__figure,
.grid--effect-pollux .stack__deco {
  transform-origin: 50% 50%; }

.grid--effect-pollux .grid__item-caption > .grid__item-title {
  transform-origin: 50% -200%; }

.back {
  background: linear-gradient(120grad, #643986, #98aed5);
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -1; }

.registration-form {
  width: 400px;
  position: absolute;
  left: 50%;
  transform: translate(-50%, 0%);
  top: 15%;
  background: transparent; }
  @media (max-width: 530px) {
    .registration-form {
      width: 300px; } }
  .registration-form header {
    position: relative;
    z-index: 4;
    background: white;
    padding: 20px 40px;
    border-radius: 15px 15px 0 0; }
    .registration-form header h1 {
      font-weight: 900;
      letter-spacing: 1.5px;
      color: #333;
      font-size: 23px;
      text-transform: uppercase;
      margin: 0; }
    .registration-form header p {
      word-spacing: 0px;
      color: #9facb6;
      font-size: 17px;
      margin: 0;
      margin-top: 5px; }
  .registration-form form {
    position: relative; }
  .registration-form .input-section {
    width: 100%;
    position: absolute;
    display: -ms-flexbox;
    display: flex;
    left: 50%;
    transform: translate(-50%, 0);
    height: 75px;
    border-radius: 0 0 15px 15px;
    overflow: hidden;
    z-index: 2;
    box-shadow: 0px 0px 50px rgba(0, 0, 0, 0.2);
    transition: all 0.2s ease-in; }
    .registration-form .input-section.folded {
      width: 95%;
      margin-top: 10px;
      left: 50%;
      transform: translate(-50%, 0);
      z-index: 1; }
      .registration-form .input-section.folded input {
        background-color: #e9e2c0; }
      .registration-form .input-section.folded span {
        background-color: #e9e2c0; }
    .registration-form .input-section.folded + .folded {
      width: 90%;
      margin-top: 20px;
      left: 50%;
      transform: translate(-50%, 0);
      z-index: 0; }
      .registration-form .input-section.folded + .folded input {
        background-color: #e1bcef; }
      .registration-form .input-section.folded + .folded span {
        background-color: #e1bcef; }
    .registration-form .input-section.fold-up {
      margin-top: -75px; }
  .registration-form form input {
    background: white;
    color: #8f8fd6;
    width: 80%;
    border: 0;
    padding: 20px 40px;
    margin: 0; }
    .registration-form form input:focus {
      outline: none; }
    .registration-form form input:-ms-input-placeholder {
      color: #8f8fd6;
      font-weight: 100; }
    .registration-form form input::placeholder {
      color: #8f8fd6;
      font-weight: 100; }

.animated-button {
  width: 20%;
  background-color: #d4d4ff; }
  .animated-button span {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
    flex-direction: row;
    -ms-flex-pack: distribute;
    justify-content: space-around;
    -ms-flex-align: center;
    align-items: center;
    line-height: 75px;
    text-align: center;
    height: 75px;
    transition: all 0.2s ease-in; }
    .animated-button span i {
      font-size: 25px;
      color: #9999f8; }
  .animated-button .next-button {
    background: transparent;
    color: #9999f8;
    font-weight: 100;
    width: 100%;
    border: 0; }

.next {
  margin-top: -75px; }

.success {
  width: 100%;
  position: absolute;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  left: 50%;
  transform: translate(-50%, 0);
  height: 75px;
  border-radius: 0 0 15px 15px;
  overflow: hidden;
  z-index: 2;
  box-shadow: 0px 0px 100px rgba(0, 0, 0, 0.2);
  transition: all 0.2s ease-in;
  background: limegreen;
  margin-top: -75px; }
  .success p {
    margin-top: 1rem;
    color: white;
    font-weight: 900;
    letter-spacing: 2px;
    font-size: 18px;
    width: 100%;
    text-align: center; }

.progress {
  border-radius: .5rem;
  text-align: center;
  position: relative;
  top: 19.68rem;
  left: 32.06rem;
  width: 25%; }
  @media (max-width: 530px) {
    .progress {
      top: 19.25rem;
      left: 6.25rem;
      width: 50%; } }

.bar {
  background-color: #92A2CD; }

.background__image-events {
  background: #ee0979;
  /* fallback for old browsers */
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #ff6a00, #ee0979);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -1; }

.hero {
  z-index: 1;
  text-align: center;
  padding-top: 18vh;
  width: 80%;
  margin: auto;
  color: white; }
  @media (max-width: 1920px) and (min-width: 1367px) {
    .hero {
      padding-top: 30vh; } }
  @media (max-width: 530px) {
    .hero {
      padding-top: 15vh; } }
  .hero__title {
    text-align: center;
    letter-spacing: 0.1em;
    font-size: 3.3rem;
    font-weight: 300; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .hero__title {
        font-size: 4.5rem; } }
    @media (max-width: 530px) {
      .hero__title {
        font-size: 1.9rem;
        letter-spacing: 0.1rem; } }
  .hero__subtitle {
    text-align: center;
    letter-spacing: 0.5rem;
    width: 50%;
    margin: auto; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .hero__subtitle {
        letter-spacing: 0.5rem; } }
    @media (max-width: 530px) {
      .hero__subtitle {
        letter-spacing: 0.115rem;
        width: 100%; } }
  .hero__arrow {
    left: 50%;
    margin-top: 1rem;
    color: #fff; }
  .hero__events {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[8];
    grid-template-columns: repeat(8, 1fr);
    font-size: 1.7rem;
    padding-top: 1rem;
    width: 50%;
    margin: auto;
    transform: translateZ(5px); }
    @media (max-width: 530px) {
      .hero__events {
        -ms-grid-columns: (1fr)[8];
        grid-template-columns: repeat(8, 1fr);
        margin: auto;
        width: 100%;
        grid-gap: 0.5rem;
        font-size: 1.5rem; } }
    .hero__events > a {
      color: white;
      position: relative; }
      .hero__events > a .tooltiptext {
        visibility: hidden;
        background-color: transparent;
        color: #fff;
        text-align: center;
        padding: 5px 0;
        border-radius: 6px;
        position: absolute;
        z-index: 1;
        width: 120px;
        top: 100%;
        left: 50%;
        margin-left: -60px;
        font-size: 1rem;
        letter-spacing: 0.1em;
        font-family: 'Raleway', sans-serif; }
        @media (max-width: 530px) {
          .hero__events > a .tooltiptext {
            font-size: 0.5rem;
            width: 60px;
            left: 135%; } }
      .hero__events > a:hover {
        color: white !important;
        padding-bottom: 0.5rem;
        border-bottom: 0.11rem solid white;
        transition: all 0.2s ease-in-out 0s; }
        .hero__events > a:hover .tooltiptext {
          visibility: visible; }

.events-page {
  margin-top: 25%; }
  .events-page__robotics-title {
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .events-page__robotics-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .events-page__robotics-title {
        margin-top: 15rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .events-page__robotics-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[3];
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .events-page__robotics-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .events-page__robotics-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: contain; }
      @media (max-width: 530px) {
        .events-page__robotics-cards-image {
          height: 40vh; } }
  .events-page__robotics-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .events-page__robotics-badge:focus {
      outline: 0; }
    .events-page__robotics-badge:hover {
      background: #ee0979;
      cursor: pointer; }
  .events-page__robotics-button:hover {
    background-color: #ee0979 !important;
    border-color: #ee0979 !important; }
  .events-page__coding-title {
    margin-top: 7rem;
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .events-page__coding-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .events-page__coding-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .events-page__coding-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[3];
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .events-page__coding-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .events-page__coding-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: contain; }
      @media (max-width: 530px) {
        .events-page__coding-cards-image {
          height: 40vh; } }
  .events-page__coding-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .events-page__coding-badge:focus {
      outline: 0; }
    .events-page__coding-badge:hover {
      background: #ff6a00;
      cursor: pointer; }
  .events-page__coding-button:hover {
    background-color: #ff6a00 !important;
    border-color: #ff6a00 !important; }
  .events-page__gaming-title {
    margin-top: 7rem;
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .events-page__gaming-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .events-page__gaming-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .events-page__gaming-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[3];
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .events-page__gaming-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .events-page__gaming-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: contain; }
      @media (max-width: 530px) {
        .events-page__gaming-cards-image {
          height: 40vh; } }
  .events-page__gaming-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .events-page__gaming-badge:focus {
      outline: 0; }
    .events-page__gaming-badge:hover {
      background: #9b59b6;
      cursor: pointer; }
  .events-page__gaming-button:hover {
    background-color: #9b59b6 !important;
    border-color: #9b59b6 !important; }
  .events-page__mechanics-title {
    margin-top: 7rem;
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .events-page__mechanics-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .events-page__mechanics-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .events-page__mechanics-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[3];
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .events-page__mechanics-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .events-page__mechanics-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: contain; }
      @media (max-width: 530px) {
        .events-page__mechanics-cards-image {
          height: 40vh; } }
  .events-page__mechanics-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .events-page__mechanics-badge:focus {
      outline: 0; }
    .events-page__mechanics-badge:hover {
      background: #2ecc71;
      cursor: pointer; }
  .events-page__mechanics-button:hover {
    background-color: #2ecc71 !important;
    border-color: #2ecc71 !important; }
  .events-page__flagship-title {
    margin-top: 7rem;
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .events-page__flagship-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .events-page__flagship-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .events-page__flagship-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[2];
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .events-page__flagship-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .events-page__flagship-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: contain; }
      @media (max-width: 530px) {
        .events-page__flagship-cards-image {
          height: 40vh; } }
  .events-page__flagship-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .events-page__flagship-badge:focus {
      outline: 0; }
    .events-page__flagship-badge:hover {
      background: #2c3e50;
      cursor: pointer; }
  .events-page__flagship-button:hover {
    background-color: #2c3e50 !important;
    border-color: #2c3e50 !important; }
  .events-page__business-title {
    margin-top: 7rem;
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .events-page__business-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .events-page__business-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .events-page__business-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[2];
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .events-page__business-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .events-page__business-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: contain; }
      @media (max-width: 530px) {
        .events-page__business-cards-image {
          height: 40vh; } }
  .events-page__business-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .events-page__business-badge:focus {
      outline: 0; }
    .events-page__business-badge:hover {
      background: #f1c40f;
      cursor: pointer; }
  .events-page__business-button:hover {
    background-color: #f1c40f !important;
    border-color: #f1c40f !important; }
  .events-page__miscellaneous-title {
    margin-top: 7rem;
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .events-page__miscellaneous-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .events-page__miscellaneous-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .events-page__miscellaneous-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[2];
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .events-page__miscellaneous-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .events-page__miscellaneous-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: contain; }
      @media (max-width: 530px) {
        .events-page__miscellaneous-cards-image {
          height: 40vh; } }
  .events-page__miscellaneous-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .events-page__miscellaneous-badge:focus {
      outline: 0; }
    .events-page__miscellaneous-badge:hover {
      background: #bdc3c7;
      cursor: pointer; }
  .events-page__miscellaneous-button:hover {
    background-color: #bdc3c7 !important;
    border-color: #bdc3c7 !important; }
  .events-page__initiatives-title {
    margin-top: 7rem;
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .events-page__initiatives-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .events-page__initiatives-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .events-page__initiatives-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[3];
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .events-page__initiatives-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .events-page__initiatives-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: contain; }
      @media (max-width: 530px) {
        .events-page__initiatives-cards-image {
          height: 40vh; } }
  .events-page__initiatives-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .events-page__initiatives-badge:focus {
      outline: 0; }
    .events-page__initiatives-badge:hover {
      background: #38ada9;
      cursor: pointer; }
  .events-page__initiatives-button:hover {
    background-color: #38ada9 !important;
    border-color: #38ada9 !important; }

.line-break {
  border: 0;
  height: 1px;
  background-image: linear-gradient(to left, #f0f0f0, #8c8b8b, #f0f0f0);
  margin-top: 6rem; }

.background__image-workshops {
  background: #EB3349;
  /* fallback for old browsers */
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #F45C43, #EB3349);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -1; }

.hero {
  z-index: 1;
  text-align: center;
  padding-top: 30vh;
  width: 80%;
  margin: auto;
  color: white; }
  @media (max-width: 1920px) and (min-width: 1367px) {
    .hero {
      padding-top: 30vh; } }
  @media (max-width: 530px) {
    .hero {
      padding-top: 15vh; } }
  .hero__title {
    text-align: center;
    letter-spacing: 0.1em;
    font-size: 3.3rem;
    font-weight: 300; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .hero__title {
        font-size: 4.5rem; } }
    @media (max-width: 530px) {
      .hero__title {
        font-size: 1.9rem;
        letter-spacing: 0.1rem; } }
  .hero__subtitle {
    text-align: center;
    letter-spacing: 0.5rem;
    width: 50%;
    margin: auto; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .hero__subtitle {
        letter-spacing: 0.5rem; } }
    @media (max-width: 530px) {
      .hero__subtitle {
        letter-spacing: 0.115rem;
        width: 100%; } }
  .hero__arrow {
    left: 50%;
    margin-top: 1rem;
    color: #fff; }

.workshops-page {
  margin-top: 25%; }
  .workshops-page__content-title {
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .workshops-page__content-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .workshops-page__content-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .workshops-page__content-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[2];
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .workshops-page__content-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .workshops-page__content-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: cover; }
      @media (max-width: 530px) {
        .workshops-page__content-cards-image {
          height: 40vh; } }
  .workshops-page__content-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .workshops-page__content-badge:focus {
      outline: 0; }
    .workshops-page__content-badge:hover {
      background: #f0932b;
      cursor: pointer; }

.line-break {
  border: 0;
  height: 1px;
  background-image: linear-gradient(to left, #f0f0f0, #8c8b8b, #f0f0f0);
  margin-top: 6rem; }

.background__image-talks {
  background: #FF512F;
  /* fallback for old browsers */
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #DD2476, #FF512F);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -1; }

.hero {
  z-index: 1;
  text-align: center;
  padding-top: 30vh;
  width: 80%;
  margin: auto;
  color: white; }
  @media (max-width: 1920px) and (min-width: 1367px) {
    .hero {
      padding-top: 30vh; } }
  @media (max-width: 530px) {
    .hero {
      padding-top: 15vh; } }
  .hero__title {
    text-align: center;
    letter-spacing: 0.1em;
    font-size: 3.3rem;
    font-weight: 300; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .hero__title {
        font-size: 4.5rem; } }
    @media (max-width: 530px) {
      .hero__title {
        font-size: 1.9rem;
        letter-spacing: 0.1rem; } }
  .hero__subtitle {
    text-align: center;
    letter-spacing: 0.5rem;
    width: 50%;
    margin: auto; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .hero__subtitle {
        letter-spacing: 0.5rem; } }
    @media (max-width: 530px) {
      .hero__subtitle {
        letter-spacing: 0.115rem;
        width: 100%; } }
  .hero__arrow {
    left: 50%;
    margin-top: 1rem;
    color: #fff; }

.talks-page {
  margin-top: 25%; }
  .talks-page__content-title {
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .talks-page__content-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .talks-page__content-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .talks-page__content-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[3];
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .talks-page__content-cards {
        -ms-grid-columns: 100%;
        grid-template-columns: 100%; } }
    .talks-page__content-cards-image {
      width: 100%;
      height: 15vw;
      object-fit: cover; }
      @media (max-width: 530px) {
        .talks-page__content-cards-image {
          height: 40vh; } }
  .talks-page__content-badge {
    font-family: 'Raleway', sans-serif;
    transition: .3s;
    overflow: hidden;
    font-weight: 300 !important; }
    .talks-page__content-badge:focus {
      outline: 0; }
    .talks-page__content-badge:hover {
      background: #130f40;
      cursor: pointer; }

.line-break {
  border: 0;
  height: 1px;
  background-image: linear-gradient(to left, #f0f0f0, #8c8b8b, #f0f0f0);
  margin-top: 6rem; }

.background__image-teams {
  background: #02AAB0;
  /* fallback for old browsers */
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #00CDAC, #02AAB0);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -1; }

.hero {
  z-index: 1;
  text-align: center;
  padding-top: 30vh;
  width: 80%;
  margin: auto;
  color: white;
  transform-style: preserve-3d; }
  @media (max-width: 1920px) and (min-width: 1367px) {
    .hero {
      padding-top: 30vh; } }
  @media (max-width: 530px) {
    .hero {
      padding-top: 20vh; } }
  .hero__title {
    text-align: center;
    letter-spacing: 0.1em;
    font-size: 3.3rem;
    font-weight: 300;
    transform: translateZ(20px); }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .hero__title {
        font-size: 4.5rem; } }
    @media (max-width: 530px) {
      .hero__title {
        font-size: 1.9rem;
        letter-spacing: 0.1rem; } }
  .hero__subtitle {
    text-align: center;
    letter-spacing: 0.5rem;
    width: 50%;
    margin: auto; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .hero__subtitle {
        letter-spacing: 0.5rem; } }
    @media (max-width: 530px) {
      .hero__subtitle {
        letter-spacing: 0.115rem;
        width: 100%; } }
  .hero__arrow {
    left: 50%;
    margin-top: 1rem;
    color: #fff; }

.teams-page {
  margin-top: 25%; }
  @media (max-width: 530px) {
    .teams-page {
      margin-top: 75%; } }
  .teams-page__head-teacher-title {
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .teams-page__head-teacher-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .teams-page__head-teacher-title {
        margin-top: 9rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .teams-page__head-teacher-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[5];
    grid-template-columns: repeat(5, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .teams-page__head-teacher-cards {
        -ms-grid-columns: (1fr)[3];
        grid-template-columns: repeat(3, 1fr); } }
    .teams-page__head-teacher-cards-image {
      width: 100%;
      height: 14vw;
      object-fit: cover; }
      @media (max-width: 530px) {
        .teams-page__head-teacher-cards-image {
          height: 15vh; } }
    .teams-page__head-teacher-cards-body {
      text-align: center; }
      .teams-page__head-teacher-cards-body-name {
        font-size: 1.5rem;
        padding-top: 1rem; }
        @media (max-width: 530px) {
          .teams-page__head-teacher-cards-body-name {
            font-size: 0.9rem; } }
      .teams-page__head-teacher-cards-body-title {
        font-size: 1.1rem; }
        @media (max-width: 530px) {
          .teams-page__head-teacher-cards-body-title {
            font-size: 0.7rem !important; } }
    .teams-page__head-teacher-cards-social {
      text-align: center;
      font-size: 1.5rem;
      padding: 0.215rem;
      display: none; }
      @media (max-width: 530px) {
        .teams-page__head-teacher-cards-social {
          font-size: 1rem; } }
      .teams-page__head-teacher-cards-social a {
        color: #02AAB0 !important; }
  .teams-page__core-member-title {
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .teams-page__core-member-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .teams-page__core-member-title {
        margin-top: 1rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .teams-page__core-member-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[5];
    grid-template-columns: repeat(5, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .teams-page__core-member-cards {
        -ms-grid-columns: (1fr)[3];
        grid-template-columns: repeat(3, 1fr); } }
    .teams-page__core-member-cards-image {
      width: 100%;
      height: 14vw;
      object-fit: cover; }
      @media (max-width: 530px) {
        .teams-page__core-member-cards-image {
          height: 15vh; } }
    .teams-page__core-member-cards-body {
      text-align: center; }
      .teams-page__core-member-cards-body-name {
        font-size: 1.5rem;
        padding-top: 1rem; }
        @media (max-width: 530px) {
          .teams-page__core-member-cards-body-name {
            font-size: 0.9rem; } }
      .teams-page__core-member-cards-body-title {
        font-size: 1.1rem; }
        @media (max-width: 530px) {
          .teams-page__core-member-cards-body-title {
            font-size: 0.7rem !important;
            margin-top: -0.4rem; } }
    .teams-page__core-member-cards-social {
      text-align: center;
      font-size: 1.3rem;
      padding: 0.215rem;
      display: none; }
      @media (max-width: 530px) {
        .teams-page__core-member-cards-social {
          font-size: 0.7rem !important;
          margin-top: -0.4rem; } }
      .teams-page__core-member-cards-social a {
        color: #02AAB0 !important; }
  .teams-page__coordinator-title {
    margin-bottom: 1.5rem;
    font-size: 2.5rem; }
    @media (max-width: 1920px) and (min-width: 1367px) {
      .teams-page__coordinator-title {
        margin-top: 30rem; } }
    @media (max-width: 530px) {
      .teams-page__coordinator-title {
        margin-top: 1rem;
        text-align: center;
        font-size: 2.5rem !important; } }
  .teams-page__coordinator-cards {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: (1fr)[7];
    grid-template-columns: repeat(7, 1fr);
    grid-gap: 2rem; }
    @media (max-width: 530px) {
      .teams-page__coordinator-cards {
        -ms-grid-columns: (1fr)[4];
        grid-template-columns: repeat(4, 1fr); } }
    .teams-page__coordinator-cards-image {
      width: 100%;
      height: 10vw;
      object-fit: cover; }
      @media (max-width: 530px) {
        .teams-page__coordinator-cards-image {
          height: 10vh; } }
    .teams-page__coordinator-cards-body {
      text-align: center; }
      .teams-page__coordinator-cards-body-name {
        font-size: 1.5rem;
        padding-top: 1rem; }
        @media (max-width: 530px) {
          .teams-page__coordinator-cards-body-name {
            font-size: 0.5rem; } }
      .teams-page__coordinator-cards-body-title {
        font-size: 1.1rem; }
        @media (max-width: 530px) {
          .teams-page__coordinator-cards-body-title {
            font-size: 0.4rem !important;
            margin-top: -0.4rem; } }
    .teams-page__coordinator-cards-social {
      text-align: center;
      font-size: 1.5rem;
      padding: 0.215rem;
      display: none; }
      @media (max-width: 530px) {
        .teams-page__coordinator-cards-social {
          font-size: 0.6rem !important;
          margin-top: -0.7rem; } }
      .teams-page__coordinator-cards-social a {
        color: #02AAB0 !important; }

.line-break {
  border: 0;
  height: 1px;
  background-image: linear-gradient(to left, #f0f0f0, #8c8b8b, #f0f0f0);
  margin-top: 6rem; }

.rounded__images {
  border-radius: 25rem !important; }

.card__teams {
  border: none !important; }
  .card__teams:hover .teams-page__core-member-cards-social {
    display: block; }
  .card__teams:hover .teams-page__core-member-cards-body-title {
    display: none; }
  .card__teams:hover .teams-page__head-teacher-cards-social {
    display: block; }
  .card__teams:hover .teams-page__head-teacher-cards-body-title {
    display: none; }
  .card__teams:hover .teams-page__coordinator-cards-social {
    display: block; }
  .card__teams:hover .teams-page__coordinator-cards-body-title {
    display: none; }

.aboutus__backdrop {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 25%;
  background: #0f0c29;
  /* fallback for old browsers */
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #24243e, #302b63, #0f0c29);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: white; }
  .aboutus__backdrop-title {
    text-align: center;
    padding: 4rem 4rem 0rem 4rem; }
  .aboutus__backdrop-subtitle {
    text-align: center;
    padding-bottom: 5rem;
    font-size: 2rem; }

.aboutus__content {
  width: 70% !important;
  margin: auto;
  padding-top: 3rem;
  padding-bottom: 3rem; }
  .aboutus__content > p {
    margin: 0 !important;
    padding: 0; }

.web {
  background: #232526;
  /* fallback for old browsers */
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #414345, #232526);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: #fff;
  font-weight: 400;
  font-size: 1em; }
  .web__backdrop {
    position: relative;
    top: 0;
    left: 0; }
    .web__backdrop-title {
      text-align: center;
      padding: 4rem 4rem 0rem 4rem; }
    .web__backdrop-subtitle {
      text-align: center;
      padding-bottom: 5rem;
      font-size: 2rem; }
  .web__content {
    width: 70% !important;
    margin: auto;
    padding-top: 3rem; }
    .web__content > p {
      margin: 0 !important;
      padding: 0; }

.grid {
  position: relative;
  clear: both;
  margin: 0 auto;
  padding: 1em 0 4em;
  max-width: 1000px;
  list-style: none;
  text-align: center; }

/* Common style */
.grid figure {
  position: relative;
  float: left;
  overflow: hidden;
  margin: 10px 1%;
  min-width: 320px;
  max-width: 480px;
  max-height: 360px;
  width: 48%;
  height: auto;
  background: #3085a3;
  text-align: center;
  cursor: pointer; }

.grid figure img {
  position: relative;
  display: block;
  min-height: 100%;
  max-width: 100%;
  opacity: 0.8; }

.grid figure figcaption {
  padding: 2em;
  color: #fff;
  text-transform: uppercase;
  font-size: 1.25em;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.grid figure figcaption::before,
.grid figure figcaption::after {
  pointer-events: none; }

.grid figure figcaption,
.grid figure figcaption > a {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

/* Anchor will cover the whole item by default */
.grid figure figcaption > a {
  z-index: 1000;
  text-indent: 200%;
  white-space: nowrap;
  font-size: 0;
  opacity: 0; }

.grid figure h2 {
  word-spacing: -0.15em;
  font-weight: 300; }

.grid figure h2 span {
  font-weight: 800; }

.grid figure h2,
.grid figure p {
  margin: 0; }

.grid figure p {
  letter-spacing: 1px;
  font-size: 68.5%; }

/*-----------------*/
/***** Apollo *****/
/*-----------------*/
figure.effect-apollo {
  background: #3498db; }

figure.effect-apollo img {
  opacity: 0.95;
  transition: opacity 0.35s, transform 0.35s;
  transform: scale3d(1.05, 1.05, 1); }

figure.effect-apollo figcaption::before {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.5);
  content: '';
  transition: transform 0.6s;
  transform: scale3d(1.9, 1.4, 1) rotate3d(0, 0, 1, 45deg) translate3d(0, -100%, 0); }

figure.effect-apollo p {
  position: absolute;
  right: 0;
  bottom: 0;
  margin: 3em;
  padding: 0 1em;
  max-width: 150px;
  border-right: 4px solid #fff;
  text-align: right;
  opacity: 0;
  transition: opacity 0.35s; }

figure.effect-apollo h2 {
  text-align: left; }

figure.effect-apollo:hover img {
  opacity: 0.6;
  transform: scale3d(1, 1, 1); }

figure.effect-apollo:hover figcaption::before {
  transform: scale3d(1.9, 1.4, 1) rotate3d(0, 0, 1, 45deg) translate3d(0, 100%, 0); }

figure.effect-apollo:hover p {
  opacity: 1;
  transition-delay: 0.1s; }

@media screen and (max-width: 50em) {
  .grid figure {
    display: inline-block;
    float: none;
    margin: 10px auto;
    width: 100%; } }

.partners__backdrop {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 25%;
  background: #e65c00;
  /* fallback for old browsers */
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #F9D423, #e65c00);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color: white; }
  .partners__backdrop-title {
    text-align: center;
    padding: 4rem 4rem 0rem 4rem; }
  .partners__backdrop-subtitle {
    text-align: center;
    padding-bottom: 5rem;
    font-size: 2rem; }

.partners__content {
  width: 70% !important;
  margin: auto;
  padding-top: 3rem;
  padding-bottom: 3rem; }
  .partners__content > p {
    margin: 0 !important;
    padding: 0; }

.partner_logo {
  filter: grayscale(100%);
  /* filter: brightness(0) invert(1); */ }

hr {
  background-color: #fff; }

.label {
  /* text-align: center; */
  -ms-flex-pack: center;
  justify-content: center; }

.custom-select-sm {
  width: 70%;
  margin-top: 10px; }

.custom-select-sm option {
  color: #000; }

.container__profile {
  margin-top: 50px;
  font-family: 'Assistant', sans-serif; }

.img__profile {
  border-radius: 50%;
  height: 200px;
  width: 200px;
  margin-top: 20%; }

.col-md-4 {
  text-align: center; }

.custom-file {
  text-align: left;
  margin-top: 30px; }

#eventSelector {
  margin-left: 10px; }

#member1-list,
#member2-list,
#member3-list,
#member4-list,
#member5-list {
  display: none;
  list-style-type: none; }

@media screen and (max-width: 770px) {
  #name {
    margin: 30px;
    text-align: center; }
  .img {
    margin-top: 10%; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
